
//HeaderV1
string fFileSignature = readStruct(fb, "4s", 0);
float fFileVersionNumber = readStruct(fb, "f", 4);
short nOperationMode = readStruct(fb, "h", 8);
int lActualAcqLength = readStruct(fb, "i", 10);
short nNumPointsIgnored = readStruct(fb, "h", 14);
int lActualEpisodes = readStruct(fb, "i", 16);
int lFileStartTime = readStruct(fb, "i", 24);
int lDataSectionPtr = readStruct(fb, "i", 40);
int lTagSectionPtr = readStruct(fb, "i", 44);
int lNumTagEntries = readStruct(fb, "i", 48);
int lSynchArrayPtr = readStruct(fb, "i", 92);
int lSynchArraySize = readStruct(fb, "i", 96);
short nDataFormat = readStruct(fb, "h", 100);
short nADCNumChannels = readStruct(fb, "h", 120);
float fADCSampleInterval = readStruct(fb, "f", 122);
float fSynchTimeUnit = readStruct(fb, "f", 130);
int lNumSamplesPerEpisode = readStruct(fb, "i", 138);
int lPreTriggerSamples = readStruct(fb, "i", 142);
int lEpisodesPerRun = readStruct(fb, "i", 146);
float fADCRange = readStruct(fb, "f", 244);
int lADCResolution = readStruct(fb, "i", 252);
short nFileStartMillisecs = readStruct(fb, "h", 366);
short[] nADCPtoLChannelMap = readStruct(fb, "16h", 378);
short[] nADCSamplingSeq = readStruct(fb, "16h", 410);
string sADCChannelName = readStruct(fb, "10s"*16, 442);
string sADCUnits = readStruct(fb, "8s"*16, 602);
float[] fADCProgrammableGain = readStruct(fb, "16f", 730);
float[] fInstrumentScaleFactor = readStruct(fb, "16f", 922);
float[] fInstrumentOffset = readStruct(fb, "16f", 986);
float[] fSignalGain = readStruct(fb, "16f", 1050);
float[] fSignalOffset = readStruct(fb, "16f", 1114);
short nDigitalEnable = readStruct(fb, "h", 1436);
short nActiveDACChannel = readStruct(fb, "h", 1440);
short nDigitalHolding = readStruct(fb, "h", 1584);
short nDigitalInterEpisode = readStruct(fb, "h", 1586);
short[] nDigitalValue = readStruct(fb, "10h", 2588);
int[] lDACFilePtr = readStruct(fb, "2i", 2048);
int[] lDACFileNumEpisodes = readStruct(fb, "2i", 2056);
float[] fDACCalibrationFactor = readStruct(fb, "4f", 2074);
float[] fDACCalibrationOffset = readStruct(fb, "4f", 2090);
short[] nWaveformEnable = readStruct(fb, "2h", 2296);
short[] nWaveformSource = readStruct(fb, "2h", 2300);
short[] nInterEpisodeLevel = readStruct(fb, "2h", 2304);
short[] nEpochType = readStruct(fb, "20h", 2308);
float[] fEpochInitLevel = readStruct(fb, "20f", 2348);
float[] fEpochLevelInc = readStruct(fb, "20f", 2428);
int[] lEpochInitDuration = readStruct(fb, "20i", 2508);
int[] lEpochDurationInc = readStruct(fb, "20i", 2588);
short[] nTelegraphEnable = readStruct(fb, "16h", 4512);
float[] fTelegraphAdditGain = readStruct(fb, "16f", 4576);
string sProtocolPath = readStruct(fb, "384s", 4898);

//HeaderV2
string fFileSignature = readStruct(fb, "4s");
signed char[] fFileVersionNumber = readStruct(fb, "4b");
unsigned int uFileInfoSize = readStruct(fb, "I");
unsigned int lActualEpisodes = readStruct(fb, "I");
unsigned int uFileStartDate = readStruct(fb, "I");
unsigned int uFileStartTimeMS = readStruct(fb, "I");
unsigned int uStopwatchTime = readStruct(fb, "I");
unsigned short nFileType = readStruct(fb, "H");
unsigned short nDataFormat = readStruct(fb, "H");
unsigned short nSimultaneousScan = readStruct(fb, "H");
unsigned short nCRCEnable = readStruct(fb, "H");
unsigned int uFileCRC = readStruct(fb, "I");
unsigned char[] uFileGUID = readStruct(fb, "16B");
unsigned char[] uCreatorVersion = readStruct(fb, "4B");
unsigned int uCreatorNameIndex = readStruct(fb, "I");
unsigned int uModifierVersion = readStruct(fb, "I");
unsigned int uModifierNameIndex = readStruct(fb, "I");
unsigned int uProtocolPathIndex = readStruct(fb, "I");

//SectionMap
Object[] ProtocolSection = readStruct(fb, "IIl", 76);
Object[] ADCSection = readStruct(fb, "IIl", 92);
Object[] DACSection = readStruct(fb, "IIl", 108);
Object[] EpochSection = readStruct(fb, "IIl", 124);
Object[] ADCPerDACSection = readStruct(fb, "IIl", 140);
Object[] EpochPerDACSection = readStruct(fb, "IIl", 156);
Object[] UserListSection = readStruct(fb, "IIl", 172);
Object[] StatsRegionSection = readStruct(fb, "IIl", 188);
Object[] MathSection = readStruct(fb, "IIl", 204);
Object[] StringsSection = readStruct(fb, "IIl", 220);
Object[] DataSection = readStruct(fb, "IIl", 236);
Object[] TagSection = readStruct(fb, "IIl", 252);
Object[] ScopeSection = readStruct(fb, "IIl", 268);
Object[] DeltaSection = readStruct(fb, "IIl", 284);
Object[] VoiceTagSection = readStruct(fb, "IIl", 300);
Object[] SynchArraySection = readStruct(fb, "IIl", 316);
Object[] AnnotationSection = readStruct(fb, "IIl", 332);
Object[] StatsSection = readStruct(fb, "IIl", 348);

//ProtocolSection
short nOperationMode = readStruct(fb, "h");
float fADCSequenceInterval = readStruct(fb, "f");
signed char bEnableFileCompression = readStruct(fb, "b");
char[] sUnused = readStruct(fb, "3c");
unsigned int uFileCompressionRatio = readStruct(fb, "I");
float fSynchTimeUnit = readStruct(fb, "f");
float fSecondsPerRun = readStruct(fb, "f");
int lNumSamplesPerEpisode = readStruct(fb, "i");
int lPreTriggerSamples = readStruct(fb, "i");
int lEpisodesPerRun = readStruct(fb, "i");
int lRunsPerTrial = readStruct(fb, "i");
int lNumberOfTrials = readStruct(fb, "i");
short nAveragingMode = readStruct(fb, "h");
short nUndoRunCount = readStruct(fb, "h");
short nFirstEpisodeInRun = readStruct(fb, "h");
float fTriggerThreshold = readStruct(fb, "f");
short nTriggerSource = readStruct(fb, "h");
short nTriggerAction = readStruct(fb, "h");
short nTriggerPolarity = readStruct(fb, "h");
float fScopeOutputInterval = readStruct(fb, "f");
float fEpisodeStartToStart = readStruct(fb, "f");
float fRunStartToStart = readStruct(fb, "f");
int lAverageCount = readStruct(fb, "i");
float fTrialStartToStart = readStruct(fb, "f");
short nAutoTriggerStrategy = readStruct(fb, "h");
float fFirstRunDelayS = readStruct(fb, "f");
short nChannelStatsStrategy = readStruct(fb, "h");
int lSamplesPerTrace = readStruct(fb, "i");
int lStartDisplayNum = readStruct(fb, "i");
int lFinishDisplayNum = readStruct(fb, "i");
short nShowPNRawData = readStruct(fb, "h");
float fStatisticsPeriod = readStruct(fb, "f");
int lStatisticsMeasurements = readStruct(fb, "i");
short nStatisticsSaveStrategy = readStruct(fb, "h");
float fADCRange = readStruct(fb, "f");
float fDACRange = readStruct(fb, "f");
int lADCResolution = readStruct(fb, "i");
int lDACResolution = readStruct(fb, "i");
short nExperimentType = readStruct(fb, "h");
short nManualInfoStrategy = readStruct(fb, "h");
short nCommentsEnable = readStruct(fb, "h");
int lFileCommentIndex = readStruct(fb, "i");
short nAutoAnalyseEnable = readStruct(fb, "h");
short nSignalType = readStruct(fb, "h");
short nDigitalEnable = readStruct(fb, "h");
short nActiveDACChannel = readStruct(fb, "h");
short nDigitalHolding = readStruct(fb, "h");
short nDigitalInterEpisode = readStruct(fb, "h");
short nDigitalDACChannel = readStruct(fb, "h");
short nDigitalTrainActiveLogic = readStruct(fb, "h");
short nStatsEnable = readStruct(fb, "h");
short nStatisticsClearStrategy = readStruct(fb, "h");
short nLevelHysteresis = readStruct(fb, "h");
int lTimeHysteresis = readStruct(fb, "i");
short nAllowExternalTags = readStruct(fb, "h");
short nAverageAlgorithm = readStruct(fb, "h");
float fAverageWeighting = readStruct(fb, "f");
short nUndoPromptStrategy = readStruct(fb, "h");
short nTrialTriggerSource = readStruct(fb, "h");
short nStatisticsDisplayStrategy = readStruct(fb, "h");
short nExternalTagType = readStruct(fb, "h");
short nScopeTriggerOut = readStruct(fb, "h");
short nLTPType = readStruct(fb, "h");
short nAlternateDACOutputState = readStruct(fb, "h");
short nAlternateDigitalOutputState = readStruct(fb, "h");
float[] fCellID = readStruct(fb, "3f");
short nDigitizerADCs = readStruct(fb, "h");
short nDigitizerDACs = readStruct(fb, "h");
short nDigitizerTotalDigitalOuts = readStruct(fb, "h");
short nDigitizerSynchDigitalOuts = readStruct(fb, "h");
short nDigitizerType = readStruct(fb, "h");

//ADCSection
short nADCNum[i] = readStruct(fb, "h");
short nTelegraphEnable[i] = readStruct(fb, "h");
short nTelegraphInstrument[i] = readStruct(fb, "h");
float fTelegraphAdditGain[i] = readStruct(fb, "f");
float fTelegraphFilter[i] = readStruct(fb, "f");
float fTelegraphMembraneCap[i] = readStruct(fb, "f");
short nTelegraphMode[i] = readStruct(fb, "h");
float fTelegraphAccessResistance[i] = readStruct(fb, "f");
short nADCPtoLChannelMap[i] = readStruct(fb, "h");
short nADCSamplingSeq[i] = readStruct(fb, "h");
float fADCProgrammableGain[i] = readStruct(fb, "f");
float fADCDisplayAmplification[i] = readStruct(fb, "f");
float fADCDisplayOffset[i] = readStruct(fb, "f");
float fInstrumentScaleFactor[i] = readStruct(fb, "f");
float fInstrumentOffset[i] = readStruct(fb, "f");
float fSignalGain[i] = readStruct(fb, "f");
float fSignalOffset[i] = readStruct(fb, "f");
float fSignalLowpassFilter[i] = readStruct(fb, "f");
float fSignalHighpassFilter[i] = readStruct(fb, "f");
signed char nLowpassFilterType[i] = readStruct(fb, "b");
signed char nHighpassFilterType[i] = readStruct(fb, "b");
float fPostProcessLowpassFilter[i] = readStruct(fb, "f");
char nPostProcessLowpassFilterType[i] = readStruct(fb, "c");
signed char bEnabledDuringPN[i] = readStruct(fb, "b");
short nStatsChannelPolarity[i] = readStruct(fb, "h");
int lADCChannelNameIndex[i] = readStruct(fb, "i");
int lADCUnitsIndex[i] = readStruct(fb, "i");

//DACSection
short nDACNum[i] = readStruct(fb, "h");
short nTelegraphDACScaleFactorEnable[i] = readStruct(fb, "h");
float fInstrumentHoldingLevel[i] = readStruct(fb, "f");
float fDACScaleFactor[i] = readStruct(fb, "f");
float fDACHoldingLevel[i] = readStruct(fb, "f");
float fDACCalibrationFactor[i] = readStruct(fb, "f");
float fDACCalibrationOffset[i] = readStruct(fb, "f");
int lDACChannelNameIndex[i] = readStruct(fb, "i");
int lDACChannelUnitsIndex[i] = readStruct(fb, "i");
int lDACFilePtr[i] = readStruct(fb, "i");
int lDACFileNumEpisodes[i] = readStruct(fb, "i");
short nWaveformEnable[i] = readStruct(fb, "h");
short nWaveformSource[i] = readStruct(fb, "h");
short nInterEpisodeLevel[i] = readStruct(fb, "h");
float fDACFileScale[i] = readStruct(fb, "f");
float fDACFileOffset[i] = readStruct(fb, "f");
int lDACFileEpisodeNum[i] = readStruct(fb, "i");
short nDACFileADCNum[i] = readStruct(fb, "h");
short nConditEnable[i] = readStruct(fb, "h");
int lConditNumPulses[i] = readStruct(fb, "i");
float fBaselineDuration[i] = readStruct(fb, "f");
float fBaselineLevel[i] = readStruct(fb, "f");
float fStepDuration[i] = readStruct(fb, "f");
float fStepLevel[i] = readStruct(fb, "f");
float fPostTrainPeriod[i] = readStruct(fb, "f");
float fPostTrainLevel[i] = readStruct(fb, "f");
short nMembTestEnable[i] = readStruct(fb, "h");
short nLeakSubtractType[i] = readStruct(fb, "h");
short nPNPolarity[i] = readStruct(fb, "h");
float fPNHoldingLevel[i] = readStruct(fb, "f");
short nPNNumADCChannels[i] = readStruct(fb, "h");
short nPNPosition[i] = readStruct(fb, "h");
short nPNNumPulses[i] = readStruct(fb, "h");
float fPNSettlingTime[i] = readStruct(fb, "f");
float fPNInterpulse[i] = readStruct(fb, "f");
short nLTPUsageOfDAC[i] = readStruct(fb, "h");
short nLTPPresynapticPulses[i] = readStruct(fb, "h");
int lDACFilePathIndex[i] = readStruct(fb, "i");
float fMembTestPreSettlingTimeMS[i] = readStruct(fb, "f");
float fMembTestPostSettlingTimeMS[i] = readStruct(fb, "f");
short nLeakSubtractADCIndex[i] = readStruct(fb, "h");

//EpochPerDACSection
short nEpochNum[i] = readStruct(fb, "h");
short nDACNum[i] = readStruct(fb, "h");
short nEpochType[i] = readStruct(fb, "h");
float fEpochInitLevel[i] = readStruct(fb, "f");
float fEpochLevelInc[i] = readStruct(fb, "f");
int lEpochInitDuration[i] = readStruct(fb, "i");
int lEpochDurationInc[i] = readStruct(fb, "i");
int lEpochPulsePeriod[i] = readStruct(fb, "i");
int lEpochPulseWidth[i] = readStruct(fb, "i");

//EpochSection
short nEpochNum[i] = readStruct(fb, "h");
short nEpochDigitalOutput[i] = readStruct(fb, "h");

//TagSection
int lTagTime[i] = readStruct(fb, "i");
string sComment[i] = readStruct(fb, "56s");
short nTagType[i] = readStruct(fb, "h");
short nVoiceTagNumberorAnnotationIndex[i] = readStruct(fb, "h");

//StringsSection
var strings[i] = readStruct(fb, structFormat, cleanStrings=False);

//StringsIndexed
