
//HeaderV1
string fFileSignature = FileReadString("fFileSignature", 0, 4); //4s;
float fFileVersionNumber = FileReadFloat("fFileVersionNumber", 4, 1); //f;
short nOperationMode = FileReadShort("nOperationMode", 8, 1); //h;
int lActualAcqLength = FileReadInt("lActualAcqLength", 10, 1); //i;
short nNumPointsIgnored = FileReadShort("nNumPointsIgnored", 14, 1); //h;
int lActualEpisodes = FileReadInt("lActualEpisodes", 16, 1); //i;
int lFileStartTime = FileReadInt("lFileStartTime", 24, 1); //i;
int lDataSectionPtr = FileReadInt("lDataSectionPtr", 40, 1); //i;
int lTagSectionPtr = FileReadInt("lTagSectionPtr", 44, 1); //i;
int lNumTagEntries = FileReadInt("lNumTagEntries", 48, 1); //i;
int lSynchArrayPtr = FileReadInt("lSynchArrayPtr", 92, 1); //i;
int lSynchArraySize = FileReadInt("lSynchArraySize", 96, 1); //i;
short nDataFormat = FileReadShort("nDataFormat", 100, 1); //h;
short nADCNumChannels = FileReadShort("nADCNumChannels", 120, 1); //h;
float fADCSampleInterval = FileReadFloat("fADCSampleInterval", 122, 1); //f;
float fSynchTimeUnit = FileReadFloat("fSynchTimeUnit", 130, 1); //f;
int lNumSamplesPerEpisode = FileReadInt("lNumSamplesPerEpisode", 138, 1); //i;
int lPreTriggerSamples = FileReadInt("lPreTriggerSamples", 142, 1); //i;
int lEpisodesPerRun = FileReadInt("lEpisodesPerRun", 146, 1); //i;
float fADCRange = FileReadFloat("fADCRange", 244, 1); //f;
int lADCResolution = FileReadInt("lADCResolution", 252, 1); //i;
short nFileStartMillisecs = FileReadShort("nFileStartMillisecs", 366, 1); //h;
short nADCPtoLChannelMap = FileReadShort("nADCPtoLChannelMap", 378, 16); //16h;
short nADCSamplingSeq = FileReadShort("nADCSamplingSeq", 410, 16); //16h;
string sADCChannelName = FileReadString("sADCChannelName", 442, 10); //10s;
string sADCUnits = FileReadString("sADCUnits", 602, 8); //8s;
float fADCProgrammableGain = FileReadFloat("fADCProgrammableGain", 730, 16); //16f;
float fInstrumentScaleFactor = FileReadFloat("fInstrumentScaleFactor", 922, 16); //16f;
float fInstrumentOffset = FileReadFloat("fInstrumentOffset", 986, 16); //16f;
float fSignalGain = FileReadFloat("fSignalGain", 1050, 16); //16f;
float fSignalOffset = FileReadFloat("fSignalOffset", 1114, 16); //16f;
short nDigitalEnable = FileReadShort("nDigitalEnable", 1436, 1); //h;
short nActiveDACChannel = FileReadShort("nActiveDACChannel", 1440, 1); //h;
short nDigitalHolding = FileReadShort("nDigitalHolding", 1584, 1); //h;
short nDigitalInterEpisode = FileReadShort("nDigitalInterEpisode", 1586, 1); //h;
short nDigitalValue = FileReadShort("nDigitalValue", 2588, 10); //10h;
int lDACFilePtr = FileReadInt("lDACFilePtr", 2048, 2); //2i;
int lDACFileNumEpisodes = FileReadInt("lDACFileNumEpisodes", 2056, 2); //2i;
float fDACCalibrationFactor = FileReadFloat("fDACCalibrationFactor", 2074, 4); //4f;
float fDACCalibrationOffset = FileReadFloat("fDACCalibrationOffset", 2090, 4); //4f;
short nWaveformEnable = FileReadShort("nWaveformEnable", 2296, 2); //2h;
short nWaveformSource = FileReadShort("nWaveformSource", 2300, 2); //2h;
short nInterEpisodeLevel = FileReadShort("nInterEpisodeLevel", 2304, 2); //2h;
short nEpochType = FileReadShort("nEpochType", 2308, 20); //20h;
float fEpochInitLevel = FileReadFloat("fEpochInitLevel", 2348, 20); //20f;
float fEpochLevelInc = FileReadFloat("fEpochLevelInc", 2428, 20); //20f;
int lEpochInitDuration = FileReadInt("lEpochInitDuration", 2508, 20); //20i;
int lEpochDurationInc = FileReadInt("lEpochDurationInc", 2588, 20); //20i;
short nTelegraphEnable = FileReadShort("nTelegraphEnable", 4512, 16); //16h;
float fTelegraphAdditGain = FileReadFloat("fTelegraphAdditGain", 4576, 16); //16f;
string sProtocolPath = FileReadString("sProtocolPath", 4898, 384); //384s;

//HeaderV2
string fFileSignature = FileReadString("fFileSignature", -1, 4); //4s;
char fFileVersionNumber = FileReadSignedChar("fFileVersionNumber", -1, 4); //4b;
uint uFileInfoSize = FileReadUnsignedInt("uFileInfoSize", -1, 1); //I;
uint lActualEpisodes = FileReadUnsignedInt("lActualEpisodes", -1, 1); //I;
uint uFileStartDate = FileReadUnsignedInt("uFileStartDate", -1, 1); //I;
uint uFileStartTimeMS = FileReadUnsignedInt("uFileStartTimeMS", -1, 1); //I;
uint uStopwatchTime = FileReadUnsignedInt("uStopwatchTime", -1, 1); //I;
ushort nFileType = FileReadUnsignedShort("nFileType", -1, 1); //H;
ushort nDataFormat = FileReadUnsignedShort("nDataFormat", -1, 1); //H;
ushort nSimultaneousScan = FileReadUnsignedShort("nSimultaneousScan", -1, 1); //H;
ushort nCRCEnable = FileReadUnsignedShort("nCRCEnable", -1, 1); //H;
uint uFileCRC = FileReadUnsignedInt("uFileCRC", -1, 1); //I;
uchar uFileGUID = FileReadUnsignedChar("uFileGUID", -1, 16); //16B;
uchar uCreatorVersion = FileReadUnsignedChar("uCreatorVersion", -1, 4); //4B;
uint uCreatorNameIndex = FileReadUnsignedInt("uCreatorNameIndex", -1, 1); //I;
uint uModifierVersion = FileReadUnsignedInt("uModifierVersion", -1, 1); //I;
uint uModifierNameIndex = FileReadUnsignedInt("uModifierNameIndex", -1, 1); //I;
uint uProtocolPathIndex = FileReadUnsignedInt("uProtocolPathIndex", -1, 1); //I;

//SectionMap
uint ProtocolSection_byteStart = FileReadUnsignedInt("ProtocolSection_byteStart", 76, 1); //IIl;
uint ADCSection_byteStart = FileReadUnsignedInt("ADCSection_byteStart", 92, 1); //IIl;
uint DACSection_byteStart = FileReadUnsignedInt("DACSection_byteStart", 108, 1); //IIl;
uint EpochSection_byteStart = FileReadUnsignedInt("EpochSection_byteStart", 124, 1); //IIl;
uint ADCPerDACSection_byteStart = FileReadUnsignedInt("ADCPerDACSection_byteStart", 140, 1); //IIl;
uint EpochPerDACSection_byteStart = FileReadUnsignedInt("EpochPerDACSection_byteStart", 156, 1); //IIl;
uint UserListSection_byteStart = FileReadUnsignedInt("UserListSection_byteStart", 172, 1); //IIl;
uint StatsRegionSection_byteStart = FileReadUnsignedInt("StatsRegionSection_byteStart", 188, 1); //IIl;
uint MathSection_byteStart = FileReadUnsignedInt("MathSection_byteStart", 204, 1); //IIl;
uint StringsSection_byteStart = FileReadUnsignedInt("StringsSection_byteStart", 220, 1); //IIl;
uint DataSection_byteStart = FileReadUnsignedInt("DataSection_byteStart", 236, 1); //IIl;
uint TagSection_byteStart = FileReadUnsignedInt("TagSection_byteStart", 252, 1); //IIl;
uint ScopeSection_byteStart = FileReadUnsignedInt("ScopeSection_byteStart", 268, 1); //IIl;
uint DeltaSection_byteStart = FileReadUnsignedInt("DeltaSection_byteStart", 284, 1); //IIl;
uint VoiceTagSection_byteStart = FileReadUnsignedInt("VoiceTagSection_byteStart", 300, 1); //IIl;
uint SynchArraySection_byteStart = FileReadUnsignedInt("SynchArraySection_byteStart", 316, 1); //IIl;
uint AnnotationSection_byteStart = FileReadUnsignedInt("AnnotationSection_byteStart", 332, 1); //IIl;
uint StatsSection_byteStart = FileReadUnsignedInt("StatsSection_byteStart", 348, 1); //IIl;

//ProtocolSection
short nOperationMode = FileReadShort("nOperationMode", -1, 1); //h;
float fADCSequenceInterval = FileReadFloat("fADCSequenceInterval", -1, 1); //f;
char bEnableFileCompression = FileReadSignedChar("bEnableFileCompression", -1, 1); //b;
char sUnused = FileReadChar("sUnused", -1, 3); //3c;
uint uFileCompressionRatio = FileReadUnsignedInt("uFileCompressionRatio", -1, 1); //I;
float fSynchTimeUnit = FileReadFloat("fSynchTimeUnit", -1, 1); //f;
float fSecondsPerRun = FileReadFloat("fSecondsPerRun", -1, 1); //f;
int lNumSamplesPerEpisode = FileReadInt("lNumSamplesPerEpisode", -1, 1); //i;
int lPreTriggerSamples = FileReadInt("lPreTriggerSamples", -1, 1); //i;
int lEpisodesPerRun = FileReadInt("lEpisodesPerRun", -1, 1); //i;
int lRunsPerTrial = FileReadInt("lRunsPerTrial", -1, 1); //i;
int lNumberOfTrials = FileReadInt("lNumberOfTrials", -1, 1); //i;
short nAveragingMode = FileReadShort("nAveragingMode", -1, 1); //h;
short nUndoRunCount = FileReadShort("nUndoRunCount", -1, 1); //h;
short nFirstEpisodeInRun = FileReadShort("nFirstEpisodeInRun", -1, 1); //h;
float fTriggerThreshold = FileReadFloat("fTriggerThreshold", -1, 1); //f;
short nTriggerSource = FileReadShort("nTriggerSource", -1, 1); //h;
short nTriggerAction = FileReadShort("nTriggerAction", -1, 1); //h;
short nTriggerPolarity = FileReadShort("nTriggerPolarity", -1, 1); //h;
float fScopeOutputInterval = FileReadFloat("fScopeOutputInterval", -1, 1); //f;
float fEpisodeStartToStart = FileReadFloat("fEpisodeStartToStart", -1, 1); //f;
float fRunStartToStart = FileReadFloat("fRunStartToStart", -1, 1); //f;
int lAverageCount = FileReadInt("lAverageCount", -1, 1); //i;
float fTrialStartToStart = FileReadFloat("fTrialStartToStart", -1, 1); //f;
short nAutoTriggerStrategy = FileReadShort("nAutoTriggerStrategy", -1, 1); //h;
float fFirstRunDelayS = FileReadFloat("fFirstRunDelayS", -1, 1); //f;
short nChannelStatsStrategy = FileReadShort("nChannelStatsStrategy", -1, 1); //h;
int lSamplesPerTrace = FileReadInt("lSamplesPerTrace", -1, 1); //i;
int lStartDisplayNum = FileReadInt("lStartDisplayNum", -1, 1); //i;
int lFinishDisplayNum = FileReadInt("lFinishDisplayNum", -1, 1); //i;
short nShowPNRawData = FileReadShort("nShowPNRawData", -1, 1); //h;
float fStatisticsPeriod = FileReadFloat("fStatisticsPeriod", -1, 1); //f;
int lStatisticsMeasurements = FileReadInt("lStatisticsMeasurements", -1, 1); //i;
short nStatisticsSaveStrategy = FileReadShort("nStatisticsSaveStrategy", -1, 1); //h;
float fADCRange = FileReadFloat("fADCRange", -1, 1); //f;
float fDACRange = FileReadFloat("fDACRange", -1, 1); //f;
int lADCResolution = FileReadInt("lADCResolution", -1, 1); //i;
int lDACResolution = FileReadInt("lDACResolution", -1, 1); //i;
short nExperimentType = FileReadShort("nExperimentType", -1, 1); //h;
short nManualInfoStrategy = FileReadShort("nManualInfoStrategy", -1, 1); //h;
short nCommentsEnable = FileReadShort("nCommentsEnable", -1, 1); //h;
int lFileCommentIndex = FileReadInt("lFileCommentIndex", -1, 1); //i;
short nAutoAnalyseEnable = FileReadShort("nAutoAnalyseEnable", -1, 1); //h;
short nSignalType = FileReadShort("nSignalType", -1, 1); //h;
short nDigitalEnable = FileReadShort("nDigitalEnable", -1, 1); //h;
short nActiveDACChannel = FileReadShort("nActiveDACChannel", -1, 1); //h;
short nDigitalHolding = FileReadShort("nDigitalHolding", -1, 1); //h;
short nDigitalInterEpisode = FileReadShort("nDigitalInterEpisode", -1, 1); //h;
short nDigitalDACChannel = FileReadShort("nDigitalDACChannel", -1, 1); //h;
short nDigitalTrainActiveLogic = FileReadShort("nDigitalTrainActiveLogic", -1, 1); //h;
short nStatsEnable = FileReadShort("nStatsEnable", -1, 1); //h;
short nStatisticsClearStrategy = FileReadShort("nStatisticsClearStrategy", -1, 1); //h;
short nLevelHysteresis = FileReadShort("nLevelHysteresis", -1, 1); //h;
int lTimeHysteresis = FileReadInt("lTimeHysteresis", -1, 1); //i;
short nAllowExternalTags = FileReadShort("nAllowExternalTags", -1, 1); //h;
short nAverageAlgorithm = FileReadShort("nAverageAlgorithm", -1, 1); //h;
float fAverageWeighting = FileReadFloat("fAverageWeighting", -1, 1); //f;
short nUndoPromptStrategy = FileReadShort("nUndoPromptStrategy", -1, 1); //h;
short nTrialTriggerSource = FileReadShort("nTrialTriggerSource", -1, 1); //h;
short nStatisticsDisplayStrategy = FileReadShort("nStatisticsDisplayStrategy", -1, 1); //h;
short nExternalTagType = FileReadShort("nExternalTagType", -1, 1); //h;
short nScopeTriggerOut = FileReadShort("nScopeTriggerOut", -1, 1); //h;
short nLTPType = FileReadShort("nLTPType", -1, 1); //h;
short nAlternateDACOutputState = FileReadShort("nAlternateDACOutputState", -1, 1); //h;
short nAlternateDigitalOutputState = FileReadShort("nAlternateDigitalOutputState", -1, 1); //h;
float fCellID = FileReadFloat("fCellID", -1, 3); //3f;
short nDigitizerADCs = FileReadShort("nDigitizerADCs", -1, 1); //h;
short nDigitizerDACs = FileReadShort("nDigitizerDACs", -1, 1); //h;
short nDigitizerTotalDigitalOuts = FileReadShort("nDigitizerTotalDigitalOuts", -1, 1); //h;
short nDigitizerSynchDigitalOuts = FileReadShort("nDigitizerSynchDigitalOuts", -1, 1); //h;
short nDigitizerType = FileReadShort("nDigitizerType", -1, 1); //h;

//ADCSection
nADCNum[i] = FileReadShort("nADCNum[i]", -1, 1); //h;
nTelegraphEnable[i] = FileReadShort("nTelegraphEnable[i]", -1, 1); //h;
nTelegraphInstrument[i] = FileReadShort("nTelegraphInstrument[i]", -1, 1); //h;
fTelegraphAdditGain[i] = FileReadFloat("fTelegraphAdditGain[i]", -1, 1); //f;
fTelegraphFilter[i] = FileReadFloat("fTelegraphFilter[i]", -1, 1); //f;
fTelegraphMembraneCap[i] = FileReadFloat("fTelegraphMembraneCap[i]", -1, 1); //f;
nTelegraphMode[i] = FileReadShort("nTelegraphMode[i]", -1, 1); //h;
fTelegraphAccessResistance[i] = FileReadFloat("fTelegraphAccessResistance[i]", -1, 1); //f;
nADCPtoLChannelMap[i] = FileReadShort("nADCPtoLChannelMap[i]", -1, 1); //h;
nADCSamplingSeq[i] = FileReadShort("nADCSamplingSeq[i]", -1, 1); //h;
fADCProgrammableGain[i] = FileReadFloat("fADCProgrammableGain[i]", -1, 1); //f;
fADCDisplayAmplification[i] = FileReadFloat("fADCDisplayAmplification[i]", -1, 1); //f;
fADCDisplayOffset[i] = FileReadFloat("fADCDisplayOffset[i]", -1, 1); //f;
fInstrumentScaleFactor[i] = FileReadFloat("fInstrumentScaleFactor[i]", -1, 1); //f;
fInstrumentOffset[i] = FileReadFloat("fInstrumentOffset[i]", -1, 1); //f;
fSignalGain[i] = FileReadFloat("fSignalGain[i]", -1, 1); //f;
fSignalOffset[i] = FileReadFloat("fSignalOffset[i]", -1, 1); //f;
fSignalLowpassFilter[i] = FileReadFloat("fSignalLowpassFilter[i]", -1, 1); //f;
fSignalHighpassFilter[i] = FileReadFloat("fSignalHighpassFilter[i]", -1, 1); //f;
nLowpassFilterType[i] = FileReadSignedChar("nLowpassFilterType[i]", -1, 1); //b;
nHighpassFilterType[i] = FileReadSignedChar("nHighpassFilterType[i]", -1, 1); //b;
fPostProcessLowpassFilter[i] = FileReadFloat("fPostProcessLowpassFilter[i]", -1, 1); //f;
nPostProcessLowpassFilterType[i] = FileReadChar("nPostProcessLowpassFilterType[i]", -1, 1); //c;
bEnabledDuringPN[i] = FileReadSignedChar("bEnabledDuringPN[i]", -1, 1); //b;
nStatsChannelPolarity[i] = FileReadShort("nStatsChannelPolarity[i]", -1, 1); //h;
lADCChannelNameIndex[i] = FileReadInt("lADCChannelNameIndex[i]", -1, 1); //i;
lADCUnitsIndex[i] = FileReadInt("lADCUnitsIndex[i]", -1, 1); //i;

//DACSection
nDACNum[i] = FileReadShort("nDACNum[i]", -1, 1); //h;
nTelegraphDACScaleFactorEnable[i] = FileReadShort("nTelegraphDACScaleFactorEnable[i]", -1, 1); //h;
fInstrumentHoldingLevel[i] = FileReadFloat("fInstrumentHoldingLevel[i]", -1, 1); //f;
fDACScaleFactor[i] = FileReadFloat("fDACScaleFactor[i]", -1, 1); //f;
fDACHoldingLevel[i] = FileReadFloat("fDACHoldingLevel[i]", -1, 1); //f;
fDACCalibrationFactor[i] = FileReadFloat("fDACCalibrationFactor[i]", -1, 1); //f;
fDACCalibrationOffset[i] = FileReadFloat("fDACCalibrationOffset[i]", -1, 1); //f;
lDACChannelNameIndex[i] = FileReadInt("lDACChannelNameIndex[i]", -1, 1); //i;
lDACChannelUnitsIndex[i] = FileReadInt("lDACChannelUnitsIndex[i]", -1, 1); //i;
lDACFilePtr[i] = FileReadInt("lDACFilePtr[i]", -1, 1); //i;
lDACFileNumEpisodes[i] = FileReadInt("lDACFileNumEpisodes[i]", -1, 1); //i;
nWaveformEnable[i] = FileReadShort("nWaveformEnable[i]", -1, 1); //h;
nWaveformSource[i] = FileReadShort("nWaveformSource[i]", -1, 1); //h;
nInterEpisodeLevel[i] = FileReadShort("nInterEpisodeLevel[i]", -1, 1); //h;
fDACFileScale[i] = FileReadFloat("fDACFileScale[i]", -1, 1); //f;
fDACFileOffset[i] = FileReadFloat("fDACFileOffset[i]", -1, 1); //f;
lDACFileEpisodeNum[i] = FileReadInt("lDACFileEpisodeNum[i]", -1, 1); //i;
nDACFileADCNum[i] = FileReadShort("nDACFileADCNum[i]", -1, 1); //h;
nConditEnable[i] = FileReadShort("nConditEnable[i]", -1, 1); //h;
lConditNumPulses[i] = FileReadInt("lConditNumPulses[i]", -1, 1); //i;
fBaselineDuration[i] = FileReadFloat("fBaselineDuration[i]", -1, 1); //f;
fBaselineLevel[i] = FileReadFloat("fBaselineLevel[i]", -1, 1); //f;
fStepDuration[i] = FileReadFloat("fStepDuration[i]", -1, 1); //f;
fStepLevel[i] = FileReadFloat("fStepLevel[i]", -1, 1); //f;
fPostTrainPeriod[i] = FileReadFloat("fPostTrainPeriod[i]", -1, 1); //f;
fPostTrainLevel[i] = FileReadFloat("fPostTrainLevel[i]", -1, 1); //f;
nMembTestEnable[i] = FileReadShort("nMembTestEnable[i]", -1, 1); //h;
nLeakSubtractType[i] = FileReadShort("nLeakSubtractType[i]", -1, 1); //h;
nPNPolarity[i] = FileReadShort("nPNPolarity[i]", -1, 1); //h;
fPNHoldingLevel[i] = FileReadFloat("fPNHoldingLevel[i]", -1, 1); //f;
nPNNumADCChannels[i] = FileReadShort("nPNNumADCChannels[i]", -1, 1); //h;
nPNPosition[i] = FileReadShort("nPNPosition[i]", -1, 1); //h;
nPNNumPulses[i] = FileReadShort("nPNNumPulses[i]", -1, 1); //h;
fPNSettlingTime[i] = FileReadFloat("fPNSettlingTime[i]", -1, 1); //f;
fPNInterpulse[i] = FileReadFloat("fPNInterpulse[i]", -1, 1); //f;
nLTPUsageOfDAC[i] = FileReadShort("nLTPUsageOfDAC[i]", -1, 1); //h;
nLTPPresynapticPulses[i] = FileReadShort("nLTPPresynapticPulses[i]", -1, 1); //h;
lDACFilePathIndex[i] = FileReadInt("lDACFilePathIndex[i]", -1, 1); //i;
fMembTestPreSettlingTimeMS[i] = FileReadFloat("fMembTestPreSettlingTimeMS[i]", -1, 1); //f;
fMembTestPostSettlingTimeMS[i] = FileReadFloat("fMembTestPostSettlingTimeMS[i]", -1, 1); //f;
nLeakSubtractADCIndex[i] = FileReadShort("nLeakSubtractADCIndex[i]", -1, 1); //h;

//EpochPerDACSection
nEpochNum[i] = FileReadShort("nEpochNum[i]", -1, 1); //h;
nDACNum[i] = FileReadShort("nDACNum[i]", -1, 1); //h;
nEpochType[i] = FileReadShort("nEpochType[i]", -1, 1); //h;
fEpochInitLevel[i] = FileReadFloat("fEpochInitLevel[i]", -1, 1); //f;
fEpochLevelInc[i] = FileReadFloat("fEpochLevelInc[i]", -1, 1); //f;
lEpochInitDuration[i] = FileReadInt("lEpochInitDuration[i]", -1, 1); //i;
lEpochDurationInc[i] = FileReadInt("lEpochDurationInc[i]", -1, 1); //i;
lEpochPulsePeriod[i] = FileReadInt("lEpochPulsePeriod[i]", -1, 1); //i;
lEpochPulseWidth[i] = FileReadInt("lEpochPulseWidth[i]", -1, 1); //i;

//EpochSection
nEpochNum[i] = FileReadShort("nEpochNum[i]", -1, 1); //h;
nEpochDigitalOutput[i] = FileReadShort("nEpochDigitalOutput[i]", -1, 1); //h;

//TagSection
lTagTime[i] = FileReadInt("lTagTime[i]", -1, 1); //i;
sComment[i] = FileReadString("sComment[i]", -1, 56); //56s;
nTagType[i] = FileReadShort("nTagType[i]", -1, 1); //h;
nVoiceTagNumberorAnnotationIndex[i] = FileReadShort("nVoiceTagNumberorAnnotationIndex[i]", -1, 1); //h;

//StringsSection

//StringsIndexed
